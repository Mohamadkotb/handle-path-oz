version: 2.1

orbs:
  changelog: onimur/github-changelog-generator@2.1.7
  mem: circleci/rememborb@0.0.1
  orb-tools: circleci/orb-tools@9.1.0
  tools: onimur/common-tools@0.0.2

commands:
  # Command - Remember Environment Variables
  remember_var:
    steps:
      - mem/remember:
          env_var: DATE_FORMAT
          value: "%d-%m-%y"
      - mem/remember:
          env_var: OUTPUT_CHANGELOG
          value: CHANGELOG.md
  # Command - Recall Environment Variables
  recall_var:
    steps:
      - mem/recall:
          env_var: DATE_FORMAT
      - mem/recall:
          env_var: OUTPUT_CHANGELOG
  # Command - Automate the publication of the new version of the simple app for google play.
  publish-sample-apk-google-play:
    steps:
      - run:
          name: Decode Publish Google Play
          command: |
            # Decode secret file from environment variables
            base64 -d \<<< $ENCODED_PUBLISH_GOOGLE_PLAY > ${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/google-play.json
            echo 'export PUBLISH_GOOGLE=${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/google-play.json' >> $BASH_ENV
      - run:
          name: Publish Sample Apk to Google Play
          command: ./gradlew publishReleaseApk
  generate-keystore:
    steps:
      - run:
          name: Decode Keystore
          command: |
            # Decode Secret keys from environment variables
            base64 -d \<<< $ENCODED_KEYSTORE > ${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/keystore.jks
            echo 'export KEYSTORE=${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/keystore.jks' >> $BASH_ENV
jobs:
  # Automate versioning to library and sample app on tagged.
  versioning:
    machine: true
    working_directory: ~/code
    steps:
      - checkout
      - run:
          name: Generate version file
          command: |
            IFS=. read -ra SEMVER \<<< "${CIRCLE_TAG}"
            MAJOR=$((${SEMVER[0]}*100))
            MINOR=$((${SEMVER[1]}*10))
            PATCH=${SEMVER[2]}
            VERSION_CODE=$((${MAJOR} + ${MINOR} + ${PATCH}))
            echo "Version name: ${CIRCLE_TAG}"
            echo "Version code: ${VERSION_CODE}"
            printf -v LIB_PROP "$(<./docs/others/lib.templ.properties)" \
            "${CIRCLE_TAG}" "${VERSION_CODE}"
            echo "${LIB_PROP}" >| ./lib.properties
      - tools/persist-dir:
          paths: lib.properties
  # Prepare gradle build, test and release
  prepare:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      # Export Env_var
      - remember_var
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      - generate-keystore
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - run:
          name: Build apk
          command: ./gradlew assembleRelease
      - run:
          name: Copy apk
          command: |
            mkdir -p artifacts
            cp -r app/build/outputs/apk/release/*.apk artifacts
      - store_artifacts:
          path: artifacts
          destination: application
      - tools/persist-dir:
          paths: artifacts

  # Publish on github releases
  publish-github-release:
    docker:
      - image: cibuilds/github:0.13
    steps:
      - checkout
      - tools/attach-dir:
          paths: artifacts
          destination: ./
      # Get Env_Var
      - recall_var
      - run:
          name: Publish Release on GitHub
          command: |
            DATE=$(date +${DATE_FORMAT})
            TAG_WITHOUT_DOT="${CIRCLE_TAG//./}"
            TITLE="Handle Path Oz"
            URL_CHANGELOG="https://github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/blob/master/${OUTPUT_CHANGELOG}#${TAG_WITHOUT_DOT}-${DATE}"
            printf -v BODY "$(<./docs/others/release.templ.md)" \
            "${TITLE}" "${DATE}" "${CIRCLE_TAG}" "${CIRCLE_BUILD_NUM}" "${CIRCLE_BUILD_URL}" "${OUTPUT_CHANGELOG}" "${URL_CHANGELOG}"
            ghr \
            -t ${GITHUB_TOKEN} \
            -u ${CIRCLE_PROJECT_USERNAME} \
            -r ${CIRCLE_PROJECT_REPONAME}  \
            -b "${BODY}" \
            -c ${CIRCLE_SHA1}  \
            -delete ${CIRCLE_TAG} artifacts
  #Upload to bintray(Jcenter), nexus(Maven Central) and GithubPackages
  publish-to-library:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - tools/attach-dir:
          paths: lib.properties
          destination: ./
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - generate-keystore
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      - run:
          name: Build apk
          command: ./gradlew assembleRelease
      - run:
          name: Publish to Jcenter and Maven Central
          command: ./gradlew clean build bintrayUpload -PdryRun=false
      - run:
          name: Publish to Github Package
          command: ./gradlew publish
      - publish-sample-apk-google-play
  # Push Changelog, Apk and new version to remote repository.
  push-updates-to-remote-github:
    machine: true
    steps:
      - checkout
      - tools/git-checkout
      - recall_var
      - tools/attach-dir:
          paths: lib.properties, ${OUTPUT_CHANGELOG}, artifacts
          destination: ./
      - tools/git-push:
          paths: lib.properties, ${OUTPUT_CHANGELOG}, artifacts
          commit-message: Auto Update Version, Changelog and Apk Release
# Filters
orb_tagged_filters: &orb_tagged_filters
  branches:
    ignore: /.*/
  tags:
    only: /^\d+\.\d+\.\d+$/ #for tag 1.2.3

workflows:
  # For all branches.
  build:
    jobs:
      - orb-tools/lint
      - orb-tools/shellcheck:
          exclude: "SC2002,SC1073,SC1009"
          requires: [orb-tools/lint]
      - prepare:
          pre-steps:
            - checkout
          requires: [orb-tools/shellcheck]
  # for all tags
  tagged-publish:
    jobs:
      - orb-tools/lint:
          filters: *orb_tagged_filters
      - orb-tools/shellcheck:
          filters: *orb_tagged_filters
          exclude: "SC2002,SC1073,SC1009"
          requires: [orb-tools/lint]
      - versioning:
          filters: *orb_tagged_filters
          context: main-context
          requires: [orb-tools/shellcheck]
      - prepare:
          pre-steps:
            - checkout
            - tools/attach-dir:
                paths: lib.properties
                destination: ./
          filters: *orb_tagged_filters
          requires: [versioning]
      - publish-github-release:
          requires: [prepare]
          filters: *orb_tagged_filters
      - changelog/changelog-custom:
          context: main-context
          pre-steps:
            - checkout
            - recall_var
          date-format: ${DATE_FORMAT}
          output: ${OUTPUT_CHANGELOG}
          requires: [prepare]
          filters: *orb_tagged_filters
      - hold:
          type: approval
          requires:
            - publish-github-release
            - changelog/changelog-custom
          filters: *orb_tagged_filters
      - push-updates-to-remote-github:
          context: main-context
          requires: [hold]
          filters: *orb_tagged_filters
      - publish-to-library:
          requires: [push-updates-to-remote-github]
          filters: *orb_tagged_filters
